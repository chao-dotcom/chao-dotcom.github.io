/* Gallery functionality for Chao Hsuan's portfolio */

// Gallery initialization
document.addEventListener('DOMContentLoaded', function() {
    initializeGallery();
    initializeAnimations();
    initializeScrollEffects();
});

// Initialize gallery functionality
function initializeGallery() {
    const galleryItems = document.querySelectorAll('.gallery-expand');
    
    galleryItems.forEach(item => {
        item.addEventListener('click', function() {
            const projectId = this.id;
            openProjectModal(projectId);
        });
        
        // Add hover effects
        item.addEventListener('mouseenter', function() {
            this.classList.add('hover-lift');
        });
        
        item.addEventListener('mouseleave', function() {
            this.classList.remove('hover-lift');
        });
    });
}

// Open project modal
function openProjectModal(projectId) {
    const projectData = getProjectData(projectId);
    
    if (projectData) {
        showProjectModal(projectData);
    }
}

// Get project data based on ID
function getProjectData(projectId) {
    const projects = {
        'project-1': {
            title: 'E-commerce Platform',
            subtitle: 'React/Node.js/MongoDB, Dec. 2023',
            image: 'img/projects/ecommerce.jpg',
            description: 'A comprehensive full-stack e-commerce platform built with modern web technologies. This project demonstrates proficiency in React for frontend development, Node.js for backend services, and MongoDB for database management.',
            features: [
                'User authentication and authorization',
                'Product catalog with search and filtering',
                'Shopping cart and checkout process',
                'Payment integration with Stripe API',
                'Admin dashboard for inventory management',
                'Responsive design for all devices',
                'Real-time inventory updates',
                'Order tracking and notifications'
            ],
            techStack: [
                { name: 'React', icon: '⚛️' },
                { name: 'Node.js', icon: '🟢' },
                { name: 'MongoDB', icon: '🍃' },
                { name: 'Express', icon: '🚀' },
                { name: 'Stripe', icon: '💳' },
                { name: 'AWS', icon: '☁️' }
            ],
            links: [
                { name: 'Live Demo', url: '#', icon: '🌐', class: 'demo' },
                { name: 'GitHub', url: '#', icon: '📱', class: 'github' }
            ],
            stats: {
                views: 156,
                likes: 23,
                forks: 8
            }
        },
        'project-2': {
            title: 'Task Manager App',
            subtitle: 'React Native/Firebase, Nov. 2023',
            image: 'img/projects/taskmanager.jpg',
            description: 'A cross-platform mobile application for task management with real-time synchronization. Built with React Native for consistent user experience across iOS and Android platforms.',
            features: [
                'Cross-platform compatibility (iOS & Android)',
                'Real-time task synchronization',
                'Offline support and data persistence',
                'Push notifications for reminders',
                'Team collaboration features',
                'Intuitive drag-and-drop interface',
                'Task categorization and tagging',
                'Progress tracking and analytics'
            ],
            techStack: [
                { name: 'React Native', icon: '📱' },
                { name: 'Firebase', icon: '🔥' },
                { name: 'Redux', icon: '🔄' },
                { name: 'Expo', icon: '📦' },
                { name: 'AsyncStorage', icon: '💾' },
                { name: 'Push Notifications', icon: '🔔' }
            ],
            links: [
                { name: 'App Store', url: '#', icon: '🍎', class: 'demo' },
                { name: 'Play Store', url: '#', icon: '🤖', class: 'demo' },
                { name: 'GitHub', url: '#', icon: '📱', class: 'github' }
            ],
            stats: {
                views: 89,
                likes: 15,
                downloads: 234
            }
        },
        'project-3': {
            title: 'Predictive Analytics Model',
            subtitle: 'Python/Scikit-learn/TensorFlow, Oct. 2023',
            image: 'img/projects/datascience.jpg',
            description: 'A comprehensive machine learning project focused on predictive analytics using real-world datasets. This project showcases expertise in data science, machine learning algorithms, and model optimization.',
            features: [
                'Multiple ML algorithms implementation',
                'Data preprocessing and feature engineering',
                'Model performance optimization',
                'Cross-validation and hyperparameter tuning',
                'Comprehensive data visualization',
                'Model interpretation and explainability',
                'Real-time prediction capabilities',
                'Automated model retraining pipeline'
            ],
            techStack: [
                { name: 'Python', icon: '🐍' },
                { name: 'Scikit-learn', icon: '🔬' },
                { name: 'TensorFlow', icon: '🧠' },
                { name: 'Pandas', icon: '🐼' },
                { name: 'NumPy', icon: '🔢' },
                { name: 'Matplotlib', icon: '📊' }
            ],
            links: [
                { name: 'Jupyter Notebook', url: '#', icon: '📓', class: 'demo' },
                { name: 'GitHub', url: '#', icon: '📱', class: 'github' },
                { name: 'Research Paper', url: '#', icon: '📄', class: 'demo' }
            ],
            stats: {
                views: 124,
                likes: 31,
                accuracy: '92%'
            }
        },
        'project-4': {
            title: 'Weather Dashboard',
            subtitle: 'JavaScript/API/Chart.js, Sep. 2023',
            image: 'img/projects/weather.jpg',
            description: 'An interactive weather dashboard that provides real-time weather data with beautiful visualizations. Features comprehensive weather information and intuitive user interface.',
            features: [
                'Real-time weather data integration',
                'Interactive weather maps',
                '5-day weather forecast',
                'Weather alerts and notifications',
                'Responsive design for all devices',
                'Multiple weather data sources',
                'Customizable dashboard layout',
                'Historical weather data analysis'
            ],
            techStack: [
                { name: 'JavaScript', icon: '🟨' },
                { name: 'Chart.js', icon: '📈' },
                { name: 'OpenWeather API', icon: '🌤️' },
                { name: 'Leaflet', icon: '🗺️' },
                { name: 'CSS3', icon: '🎨' },
                { name: 'HTML5', icon: '🌐' }
            ],
            links: [
                { name: 'Live Demo', url: '#', icon: '🌐', class: 'demo' },
                { name: 'GitHub', url: '#', icon: '📱', class: 'github' }
            ],
            stats: {
                views: 203,
                likes: 42,
                apiCalls: '10K+'
            }
        }
    };
    
    return projects[projectId];
}

// Show project modal - CLEAN STRUCTURE FOR CUSTOM CSS
function showProjectModal(project) {
    const modalHtml = `
        <div id="project-modal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>${project.title}</h3>
                    <div class="project-meta">${project.subtitle}</div>
                    <button class="close-btn">&times;</button>
                </div>
                
                <div class="modal-body">
                    <img src="${project.image}" alt="${project.title}" class="project-image">
                    
                    <div class="project-description">
                        <p>${project.description}</p>
                    </div>
                    
                    <div class="project-features">
                        <h4>Key Features</h4>
                        <ul>
                            ${project.features.map(feature => `<li>${feature}</li>`).join('')}
                        </ul>
                    </div>
                    
                    <div class="project-tech-stack">
                        <h4>Technology Stack</h4>
                        <div class="tech-grid">
                            ${project.techStack.map(tech => `
                                <div class="tech-item">
                                    <div class="tech-icon">${tech.icon}</div>
                                    <div class="tech-name">${tech.name}</div>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                    
                    <div class="project-stats">
                        ${Object.entries(project.stats).map(([key, value]) => `
                            <div class="stat">
                                <span class="stat-number">${value}</span>
                                <span class="stat-label">${key.charAt(0).toUpperCase() + key.slice(1)}</span>
                            </div>
                        `).join('')}
                    </div>
                    
                    <div class="project-links">
                        ${project.links.map(link => `
                            <a href="${link.url}" class="${link.class}">
                                <i class="material-icons">${link.icon}</i>
                                ${link.name}
                            </a>
                        `).join('')}
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // Remove existing modal if any
    const existingModal = document.getElementById('project-modal');
    if (existingModal) {
        existingModal.remove();
    }
    
    // Add modal to page
    document.body.insertAdjacentHTML('beforeend', modalHtml);
    
    const modal = document.getElementById('project-modal');
    const closeBtn = modal.querySelector('.close-btn');
    
    // Show modal
    modal.style.display = 'block';
    
    // Close function
    function closeModal() {
        modal.style.display = 'none';
        modal.remove();
    }
    
    // Event listeners
    closeBtn.addEventListener('click', closeModal);
    
    // Close modal when clicking outside
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeModal();
        }
    });
    
    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && modal.style.display === 'block') {
            closeModal();
        }
    });
}

// Initialize animations
function initializeAnimations() {
    // Add fade-in animation to gallery items
    const galleryItems = document.querySelectorAll('.gallery-curve-wrapper');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('fade-in');
            }
        });
    }, {
        threshold: 0.1
    });
    
    galleryItems.forEach(item => {
        observer.observe(item);
    });
}

// Initialize scroll effects
function initializeScrollEffects() {
    let lastScrollTop = 0;
    const navbar = document.querySelector('.nav-extended');
    
    window.addEventListener('scroll', function() {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        
        if (scrollTop > lastScrollTop && scrollTop > 100) {
            // Scrolling down
            navbar.style.transform = 'translateY(-100%)';
        } else {
            // Scrolling up
            navbar.style.transform = 'translateY(0)';
        }
        
        lastScrollTop = scrollTop;
    });
}

// Filter projects
function filter(category) {
    const projects = document.querySelectorAll('.scrollspy');
    const tabs = document.querySelectorAll('.tab a');
    
    // Update active tab
    tabs.forEach(tab => tab.classList.remove('active'));
    event.target.classList.add('active');
    
    // Show/hide projects based on category
    projects.forEach(project => {
        if (category === 'all' || project.classList.contains(category)) {
            project.style.display = 'block';
            project.classList.add('fade-in');
        } else {
            project.style.display = 'none';
            project.classList.remove('fade-in');
        }
    });
    
    // Update section headers
    const headers = document.querySelectorAll('.filter_on, .filter_off');
    headers.forEach(header => {
        if (category === 'all') {
            header.classList.remove('filter_on');
            header.classList.add('filter_off');
        } else {
            if (header.classList.contains(category)) {
                header.classList.remove('filter_off');
                header.classList.add('filter_on');
            } else {
                header.classList.remove('filter_on');
                header.classList.add('filter_off');
            }
        }
    });
}

// Favorite button functionality
function clickFavorite() {
    M.toast({
        html: 'Added to favorites!',
        classes: 'rounded',
        displayLength: 2000
    });
}

// Search functionality
function searchProjects(query) {
    const projects = document.querySelectorAll('.gallery-expand');
    const searchTerm = query.toLowerCase();
    
    projects.forEach(project => {
        const title = project.querySelector('h3, h5').textContent.toLowerCase();
        const description = project.querySelector('.caption, .description').textContent.toLowerCase();
        
        if (title.includes(searchTerm) || description.includes(searchTerm)) {
            project.closest('.scrollspy').style.display = 'block';
        } else {
            project.closest('.scrollspy').style.display = 'none';
        }
    });
}

// Smooth scrolling for navigation
function smoothScrollTo(target) {
    const element = document.querySelector(target);
    if (element) {
        element.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
        });
    }
}

// Initialize tooltips
function initializeTooltips() {
    const tooltipElements = document.querySelectorAll('[data-tooltip]');
    tooltipElements.forEach(element => {
        M.Tooltip.init(element);
    });
}

// Export functions for global access
window.openProjectModal = openProjectModal;
window.filter = filter;
window.clickFavorite = clickFavorite;
window.searchProjects = searchProjects;
window.smoothScrollTo = smoothScrollTo;
